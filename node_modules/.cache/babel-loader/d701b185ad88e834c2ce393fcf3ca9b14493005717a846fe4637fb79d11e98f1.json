{"ast":null,"code":"var _jsxFileName = \"/Users/ajinkyawarve/Desktop/currency-exchange/src/CurrencyConversion.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { TextField, MenuItem, Button, Radio, RadioGroup, FormControlLabel, TableContainer, Table, TableBody, TableCell, Paper, TableHead, TableRow, Grid } from \"@mui/material\";\nimport CompareArrowsIcon from \"@mui/icons-material/CompareArrows\";\nimport moment from \"moment\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"https://api.exchangerate.host\";\nfunction CurrencyConversion(props) {\n  _s();\n  // Initializing all the state variables\n  const [output, setOutput] = useState(0);\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [amount, setAmount] = useState(0);\n  const [fromCurrency, setFromCurrency] = useState(\"EUR\");\n  const [toCurrency, setToCurrency] = useState(\"USD\");\n  const [exchangeRate, setExchangeRate] = useState();\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [duration, setDuration] = useState(7);\n  const [exchangeRateHistory, setExchangeRateHistory] = useState([]);\n  const [value, setValue] = useState(\"table\");\n  const [error, setErrorMessage] = useState();\n  const [lowestRate, setLowestRate] = useState();\n  const [highestRate, setHighestRate] = useState();\n  const [averageRate, setAverageRate] = useState();\n  const [conversionHistory, setConversionHistory] = useState([]);\n  const selectDate = [{\n    id: 7,\n    value: \"7 days\"\n  }, {\n    id: 14,\n    value: \"14 days\"\n  }, {\n    id: 30,\n    value: \"30 days\"\n  }];\n\n  // to store the conversion history in local storage\n\n  useEffect(() => {\n    var _props$conversionHist;\n    if ((_props$conversionHist = props.conversionHistory) !== null && _props$conversionHist !== void 0 && _props$conversionHist.length) {\n      localStorage.setItem('conversionHistory', JSON.stringify(props.conversionHistory));\n    }\n  }, [props.conversionHistory]);\n\n  // get the currency list\n\n  useEffect(() => {\n    fetch(`${BASE_URL}/latest`).then(res => res.json()).then(data => {\n      setCurrencyOptions([...Object.keys(data.rates)]);\n      // console.log(\"data from api\", [...Object.keys(data.rates)]);\n    }).catch(err => console.log(\"There was an error:\" + err));\n  }, []);\n\n  //  convert currency and get targeted currency\n\n  useEffect(() => {\n    if (fromCurrency !== toCurrency) {\n      fetch(`${BASE_URL}/convert?from=${fromCurrency}&to=${toCurrency}`).then(res => res.json()).then(data => {\n        const result = data.result;\n        console.log(\"data for to currency\", result);\n        setExchangeRate(result);\n        const newConversion = {\n          amount,\n          fromCurrency,\n          toCurrency,\n          result,\n          date: moment().format(\"YYYY-MM-DD @ HH:mm\")\n        };\n        if (amount !== 0) {\n          props.setConversionHistory(prevHistory => [newConversion, ...prevHistory]);\n          console.log('storage----->>>', newConversion);\n        }\n      }).catch(err => console.log(\"There was an error:\" + err));\n    } else {\n      setErrorMessage(\"You cann't convert the same currency!\");\n    }\n  }, [fromCurrency, toCurrency, output]);\n\n  // to get targeted currency rate during the period of time\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/timeseries?start_date=${startDate}&end_date=${endDate}`);\n        const json = await response.json();\n        const rates = json.rates;\n        console.log('rates', rates);\n        setExchangeRateHistory(rates);\n        const temp = [];\n        Object.entries(rates).map(_ref => {\n          let [date, rates] = _ref;\n          temp.push(rates[toCurrency]);\n        });\n        const lowest = Math.min(...temp);\n        setLowestRate(lowest);\n        const high = Math.max(...temp);\n        setHighestRate(high);\n        console.log('highest', high);\n        const Rates = rates[toCurrency];\n        const sum = temp.reduce((acc, rate) => acc + rate, 0);\n        const average = sum / temp.length;\n        setAverageRate(average);\n      } catch (error) {\n        console.error('Error fetching currency data:', error);\n      }\n    };\n    fetchData();\n  }, [exchangeRate, startDate]);\n\n  // to get the duration of history currencyRate i.e 7days, 14days, 30dyas\n\n  useEffect(() => {\n    if (duration) {\n      setStartDate(moment(moment().subtract(duration, \"days\").calendar()).format(\"YYYY-MM-DD\"));\n    }\n  }, [duration]);\n\n  // use to convert the to fromCurrency to target currency\n\n  const convert = () => {\n    const result = amount * exchangeRate;\n    setOutput(result);\n  };\n\n  // Switch the currency \n\n  const flip = () => {\n    var temp = fromCurrency;\n    setFromCurrency(toCurrency);\n    setToCurrency(temp);\n  };\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"currencyConversion\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I want to convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-number\",\n          label: \"Amount\",\n          type: \"number\",\n          value: amount,\n          inputProps: {\n            min: 0\n          },\n          InputLabelProps: {\n            shrink: true\n          },\n          variant: \"standard\",\n          fullWidth: true,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          label: \"From\",\n          defaultValue: \"USD\",\n          variant: \"standard\",\n          value: fromCurrency,\n          fullWidth: true,\n          onChange: e => setFromCurrency(e.target.value),\n          children: currencyOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        md: 0.6,\n        children: /*#__PURE__*/_jsxDEV(CompareArrowsIcon, {\n          className: \"compareArrowIcon\",\n          onClick: () => {\n            flip();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          label: \"To\",\n          defaultValue: \"EUR\",\n          variant: \"standard\",\n          fullWidth: true,\n          value: toCurrency,\n          onChange: e => setToCurrency(e.target.value),\n          children: currencyOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        md: 2.4,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          fullWidth: true,\n          sx: {\n            textTransform: \"none\"\n          },\n          className: \"button\",\n          onClick: () => {\n            convert();\n          },\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Unbold center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: `${amount} ${fromCurrency} = `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"currencyResult\",\n        children: error ? error : `${output.toFixed(4)} ${toCurrency}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"text\", {\n        children: `1 ${fromCurrency} =  ${exchangeRate} ${toCurrency} `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"exchangeHistoryTiltle\",\n      children: \"Exchange History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      style: {\n        marginBottom: '2%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          label: \"To\",\n          variant: \"standard\",\n          fullWidth: true,\n          value: duration,\n          onChange: e => setDuration(e.target.value),\n          children: selectDate.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option.id,\n            children: option.value\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          \"aria-labelledby\": \"demo-radio-buttons-group-label\",\n          defaultValue: \"table\",\n          name: \"radio-buttons-group\",\n          row: true,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"table\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 54\n            }, this),\n            label: \"Table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"chart\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 54\n            }, this),\n            label: \"chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), value === \"table\" ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 200\n          },\n          \"aria-label\": \"simple table\",\n          component: Paper,\n          size: \"large\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Exchange Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: Object.entries(exchangeRateHistory).map(_ref2 => {\n              let [date, rates] = _ref2;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: rates[toCurrency]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 21\n                }, this)]\n              }, date, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 200\n          },\n          \"aria-label\": \"simple table\",\n          component: Paper,\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Statistics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [/*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: \"Lowest\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [\" \", lowestRate !== null ? lowestRate : 'no value']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: \"Highest\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: highestRate !== null ? highestRate : 'no value'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: \"average \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: averageRate !== null ? averageRate : 'no value'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: \"This feature is not available for this moment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(CurrencyConversion, \"r8egNC0Vc0uUsY4KX39JpjqD7Zc=\");\n_c = CurrencyConversion;\nexport default CurrencyConversion;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConversion\");","map":{"version":3,"names":["useEffect","useState","TextField","MenuItem","Button","Radio","RadioGroup","FormControlLabel","TableContainer","Table","TableBody","TableCell","Paper","TableHead","TableRow","Grid","CompareArrowsIcon","moment","jsxDEV","_jsxDEV","BASE_URL","CurrencyConversion","props","_s","output","setOutput","currencyOptions","setCurrencyOptions","amount","setAmount","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","startDate","setStartDate","endDate","setEndDate","format","duration","setDuration","exchangeRateHistory","setExchangeRateHistory","value","setValue","error","setErrorMessage","lowestRate","setLowestRate","highestRate","setHighestRate","averageRate","setAverageRate","conversionHistory","setConversionHistory","selectDate","id","_props$conversionHist","length","localStorage","setItem","JSON","stringify","fetch","then","res","json","data","Object","keys","rates","catch","err","console","log","result","newConversion","date","prevHistory","fetchData","response","temp","entries","map","_ref","push","lowest","Math","min","high","max","Rates","sum","reduce","acc","rate","average","subtract","calendar","convert","flip","handleChange","event","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","label","type","inputProps","InputLabelProps","shrink","variant","fullWidth","onChange","e","select","defaultValue","option","onClick","sx","textTransform","toFixed","style","marginBottom","name","row","control","minWidth","component","size","_ref2","scope","_c","$RefreshReg$"],"sources":["/Users/ajinkyawarve/Desktop/currency-exchange/src/CurrencyConversion.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  TextField,\n  MenuItem,\n  Button,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  TableContainer,\n  Table,\n  TableBody,\n  TableCell,\n  Paper,\n  TableHead,\n  TableRow,\n  Grid,\n} from \"@mui/material\";\nimport CompareArrowsIcon from \"@mui/icons-material/CompareArrows\";\nimport moment from \"moment\";\n\nimport \"./App.css\";\n\nconst BASE_URL = \"https://api.exchangerate.host\";\n\nfunction CurrencyConversion(props) {\n  // Initializing all the state variables\n  const [output, setOutput] = useState(0);\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [amount, setAmount] = useState(0);\n  const [fromCurrency, setFromCurrency] = useState(\"EUR\");\n  const [toCurrency, setToCurrency] = useState(\"USD\");\n  const [exchangeRate, setExchangeRate] = useState();\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [duration, setDuration] = useState(7);\n  const [exchangeRateHistory, setExchangeRateHistory] = useState([]);\n  const [value, setValue] = useState(\"table\");\n  const [error, setErrorMessage] = useState();\n  const [lowestRate, setLowestRate] = useState();\n  const [highestRate, setHighestRate] = useState();\n  const [averageRate, setAverageRate] = useState();\n  const [conversionHistory, setConversionHistory] = useState([]);\n\n\n  const selectDate = [\n    {\n      id: 7,\n      value: \"7 days\",\n    },\n    {\n      id: 14,\n      value: \"14 days\",\n    },\n    {\n      id: 30,\n      value: \"30 days\",\n    },\n  ];\n\n// to store the conversion history in local storage\n\n  useEffect(() => {\n    if(props.conversionHistory?.length){\n      localStorage.setItem('conversionHistory', JSON.stringify(props.conversionHistory));\n    }\n  }, [props.conversionHistory]);\n\n // get the currency list\n\n  useEffect(() => {\n    fetch(`${BASE_URL}/latest`)\n      .then((res) => res.json())\n      .then((data) => {\n        setCurrencyOptions([...Object.keys(data.rates)]);\n        // console.log(\"data from api\", [...Object.keys(data.rates)]);\n      })\n      .catch((err) => console.log(\"There was an error:\" + err));\n  }, []);\n\n   //  convert currency and get targeted currency\n\n  useEffect(() => {\n    if (fromCurrency !== toCurrency) {\n      fetch(`${BASE_URL}/convert?from=${fromCurrency}&to=${toCurrency}`)\n        .then((res) => res.json())\n        .then((data) => {\n          const result = data.result\n          console.log(\"data for to currency\", result);\n          setExchangeRate(result);\n          const newConversion = {\n            amount,\n            fromCurrency,\n            toCurrency,\n            result,\n            date: moment().format(\"YYYY-MM-DD @ HH:mm\")\n          };\n\n          if(amount !== 0 ){\n\n            props.setConversionHistory((prevHistory) => [newConversion, ...prevHistory]);\n            console.log('storage----->>>',newConversion )\n          } \n    \n        })\n        .catch((err) => console.log(\"There was an error:\" + err));\n    } else {\n      setErrorMessage(\"You cann't convert the same currency!\");\n    }\n  }, [fromCurrency, toCurrency, output]);\n\n// to get targeted currency rate during the period of time\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/timeseries?start_date=${startDate}&end_date=${endDate}`);\n        const json = await response.json();\n        const rates = json.rates;\n        console.log('rates',rates)\n        setExchangeRateHistory(rates);\n        const temp = [];\n        Object.entries(rates).map(([date, rates]) => {\n          temp.push(rates[toCurrency])\n        })\n        const lowest = Math.min(...temp);\n        setLowestRate(lowest);\n        const high = Math.max(...temp);\n        setHighestRate(high)\n        console.log('highest',high)\n        const Rates = rates[toCurrency]\n        const sum = temp.reduce((acc, rate) => acc + rate, 0);\n        const average = sum / temp.length;\n        setAverageRate(average);\n      } catch (error) {\n        console.error('Error fetching currency data:', error);\n      }\n    };\n    fetchData();\n  }, [exchangeRate,startDate]);\n\n  // to get the duration of history currencyRate i.e 7days, 14days, 30dyas\n\n  useEffect(() => {\n    if (duration) {\n      setStartDate(\n        moment(moment().subtract(duration, \"days\").calendar()).format(\n          \"YYYY-MM-DD\"\n        )\n      );\n\n    }\n  }, [duration]);\n\n// use to convert the to fromCurrency to target currency\n\n  const convert =() => {\n    const result = amount * exchangeRate;\n    setOutput(result);\n  }\n\n  // Switch the currency \n\n  const flip = () => {\n    var temp = fromCurrency;\n    setFromCurrency(toCurrency);\n    setToCurrency(temp);\n  }\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n\n  return (\n    <div className=\"currencyConversion\">\n      <h1>I want to convert</h1>\n      <Grid container spacing={2}>\n        <Grid item xs={8} md={3}>\n          <TextField\n            id=\"standard-number\"\n            label=\"Amount\"\n            type=\"number\"\n            value={amount}\n            inputProps={{min:0}}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"standard\"\n            fullWidth\n            onChange={(e) => setAmount(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={8} md={3}>\n          <TextField\n            select\n            label=\"From\"\n            defaultValue=\"USD\"\n            variant=\"standard\"\n            value={fromCurrency}\n            fullWidth\n            onChange={(e) => setFromCurrency(e.target.value)}\n          >\n            {currencyOptions.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item xs={2} md={0.6}>\n          <CompareArrowsIcon\n            className=\"compareArrowIcon\"\n            onClick={() => {\n              flip();\n            }}\n          />\n        </Grid>\n        <Grid item xs={8} md={3}>\n          <TextField\n            select\n            label=\"To\"\n            defaultValue=\"EUR\"\n            variant=\"standard\"\n            fullWidth\n            value={toCurrency}\n            onChange={(e) => setToCurrency(e.target.value)}\n          >\n            {currencyOptions.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item xs={8} md={2.4}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            sx={{textTransform: \"none\"}}\n            className=\"button\"\n            onClick={() => {\n              convert();\n            }}\n          >\n            Convert\n          </Button>\n        </Grid>\n      </Grid>\n\n      <h1 className=\"Unbold center\">\n        <span>{`${amount} ${fromCurrency} = `}</span>\n        <span className=\"currencyResult\">\n          {error ? error : `${output.toFixed(4)} ${toCurrency}`}\n        </span>\n      </h1>\n      <div className=\"center\">\n        <text>{`1 ${fromCurrency} =  ${exchangeRate} ${toCurrency} `}</text>\n      </div>\n\n      <h2 className=\"exchangeHistoryTiltle\">Exchange History</h2>\n      <Grid container spacing={4} style={{marginBottom:'2%'}}>\n        <Grid item xs={8} md={3}>\n          <TextField\n            select\n            label=\"To\"\n            variant=\"standard\"\n            fullWidth\n            value={duration}\n            onChange={(e) => setDuration(e.target.value)}\n          >\n            {selectDate.map((option) => (\n              <MenuItem key={option.id} value={option.id}>\n                {option.value}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item xs={8} md={4}>\n          <RadioGroup\n            aria-labelledby=\"demo-radio-buttons-group-label\"\n            defaultValue=\"table\"\n            name=\"radio-buttons-group\"\n            row\n            onChange={handleChange}\n          >\n            <FormControlLabel value=\"table\" control={<Radio />} label=\"Table\" />\n            <FormControlLabel value=\"chart\" control={<Radio />} label=\"chart\" />\n          </RadioGroup>\n        </Grid>\n      </Grid>\n\n      {value === \"table\" ? (\n        <Grid container spacing={1}>\n          <Grid item xs={8} md={6}>\n            <Table\n              sx={{ minWidth: 200 }}\n              aria-label=\"simple table\"\n              component={Paper}\n              size=\"large\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Exchange Rate</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {Object.entries(exchangeRateHistory).map(([date, rates]) => (\n                  <TableRow key={date}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {date}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {rates[toCurrency]}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Grid>\n          <Grid item xs={8} md={6}>\n            <Table\n              sx={{ minWidth: 200 }}\n              aria-label=\"simple table\"\n              component={Paper}\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell>Statistics</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    Lowest\n                  </TableCell>\n                  <TableCell> {lowestRate !== null ?  lowestRate : 'no value'}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">Highest</TableCell>\n                  <TableCell>{highestRate !== null ?  highestRate : 'no value'}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">average </TableCell>\n                  <TableCell>{averageRate !== null ?  averageRate : 'no value'}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Grid>\n        </Grid>\n      ) : (\n        <div className=\"center\">This feature is not available for this moment</div>\n      ) }\n    </div>\n  );\n}\n\nexport default CurrencyConversion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}